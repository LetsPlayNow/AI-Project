1) Сделать кнопку HOME на странице finish_game больше и заметнее
2) Добавить сжатие для JS и CSS
3) Переписать User
  1 вариант - регистрация по 1 лишь email
  2 вариант - Device
4) Дописать о геттерах и принципах работы с ними в help
5) FICHA: Добавить уничтожаемость снарядов при столкновении
6)Пока грузится JSON, нужно поставить заставку на странице simulation
16) Сделать текстуры получше
17) Добавить анимации (взрыва снаряда, гибели игрока и т.д.)
19) validate_move_lists (можно сделать, чтобы координаты, выходящие за границы поля,
приравнивались к максимально возможной координате, а не просто образелись)
20) Сделать продвинутый интерфейс для управления игроков
   move_left_for()
   move_right_for()
   is_on_the_shoot_line()
   и т.д.
Сделать умные геттеры для World (easy)
  @my_unit.shoot_to(1, 1)
  @my_unit.shoot_to(enemy)
28) Проверка по координате >= 0 + 1 <= MAP_SIZE - 1
25) При запуске сервера (очищать столбец GameSession и Player в базе данных)
26) Если код игрока неправильный, то выполнять симуляцию без него
Нужна концепция отмирания стратегии (чтобы стратегии, игрок которых погиб или которые завершились с ошибкой помечались как
отмершие и далее не обрабатывались (удалялись например)

38) Найти способ мониторинга активности на сайте
39) Рандомная генерация препятствий - cool
43) Соло игра с ботом (medium)
На одной из страниц висит список Players
Можно выбрать любого из них и начнется игра со статической стратегией

44) Оставить 2 поля в users: email и password_digest
Чтобы получить имя пользователя, просто обрезаем его email по @ (надо будет уточнить)
46) 3D console
47) Удалить ненужные индексы в таблице
49) Есть ли разница между /game_page/ и /game_page и /game_page? (easy)
50) Нужны тесты (medium)
51) Использовать Set вместо Array в GameSessionController как массив ид игроков - хорошо
52) Переписать таймер с использованием сторонней библиотеки (99%)

57) Если скрипт IdeaInformera не может связаться с сервером, он выглядит стремно (скачай картинки на сервер) (easy)
58) Demonstration action
59) Better api for Visualizer.js
Сделать кнопки для повторного проигрывания сражения (можно через событие on_click)
60) Реализовать @@ids_of_waiting players через таблицу в БД
61) Сделать демонстрацию доступной без регистрации
62) Отрефакторить CSS & HTML
 -> Не пихать странное туда (input'ы вместо кнопок и т.д.)
63) Написать тесты! Без них никуда!
Вручную тестровать все после каждого изменения?
Да ты свихнулся!

Devise todo
Some setup you must do manually if you haven't yet:

  1. Ensure you have defined default url options in your environments files. Here
     is an example of default_url_options appropriate for a development environment
     in config/environments/development.rb:

       config.action_mailer.default_url_options = { host: 'localhost', port: 3000 }

     In production, :host should be set to the actual host of your application.

  2. Ensure you have defined root_url to *something* in your config/routes.rb.
     For example:

       root to: "home#index"

  3. Ensure you have flash messages in app/views/layouts/application.html.erb.
     For example:

       <p class="notice"><%= notice %></p>
       <p class="alert"><%= alert %></p>

  4. You can copy Devise views (for customization) to your app by running:

       rails g devise:views

  def self.up
    create_table "users", force: :cascade do |t|
      t.string   "name"
      t.string   "email"
      t.datetime "created_at",                  null: false
      t.datetime "updated_at",                  null: false
      t.string   "password_digest"
      t.string   "remember_token"
      t.integer  "wins_count",      default: 0
    end